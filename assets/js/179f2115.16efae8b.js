"use strict";(self.webpackChunkcity_skylines_wiki=self.webpackChunkcity_skylines_wiki||[]).push([[771],{5586:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var t=n(6070),i=n(5710);const o={},r="Commit Message Standards",c={id:"standards/std-001",title:"Commit Message Standards",description:"What is a Commit?",source:"@site/docs/standards/std-001.md",sourceDirName:"standards",slug:"/standards/std-001",permalink:"/docs/standards/std-001",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Development Environment",permalink:"/docs/development/environment"},next:{title:"Branch Naming Standard",permalink:"/docs/standards/std-002"}},a={},d=[{value:"What is a Commit?",id:"what-is-a-commit",level:2},{value:"Types of Commits",id:"types-of-commits",level:2},{value:"Commit Message Format",id:"commit-message-format",level:2},{value:"Breaking Change",id:"breaking-change",level:2}];function l(e){const s={code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"commit-message-standards",children:"Commit Message Standards"}),"\n",(0,t.jsx)(s.h2,{id:"what-is-a-commit",children:"What is a Commit?"}),"\n",(0,t.jsx)(s.p,{children:"A commit is a snapshot of your repository at a specific point in time. It records changes to your files, allowing you to track the history of your project and collaborate with others."}),"\n",(0,t.jsx)(s.h2,{id:"types-of-commits",children:"Types of Commits"}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"feat"}),": A new feature for the user, not a new feature for build script."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"fix"}),": A bug fix for the user, not a fix to a build script."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"docs"}),": Changes to the documentation only."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"style"}),": Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"refactor"}),": A code change that neither fixes a bug nor adds a feature."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"perf"}),": A code change that improves performance."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"test"}),": Adding missing or correcting existing tests."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"chore"}),": Changes to the build process or auxiliary tools and libraries such as documentation generation."]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"commit-message-format",children:"Commit Message Format"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"<type>(<scope>): <subject>"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"<type>"}),": The type of the commit (e.g., ",(0,t.jsx)(s.code,{children:"feat"}),", ",(0,t.jsx)(s.code,{children:"fix"}),", ",(0,t.jsx)(s.code,{children:"docs"}),")."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"<scope>"}),": The scope of the commit (e.g., ",(0,t.jsx)(s.code,{children:"develop"}),", ",(0,t.jsx)(s.code,{children:"main"}),")."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"<subject>"}),": A concise description of the commit."]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"breaking-change",children:"Breaking Change"}),"\n",(0,t.jsxs)(s.p,{children:["If your commit introduces a breaking change that will affect users, include ",(0,t.jsx)(s.code,{children:"BREAKING_CHANGE"})," in the commit message. This helps users understand the impact of the change and take necessary actions to update their code."]}),"\n",(0,t.jsx)(s.p,{children:"Example with Breaking Change:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-git",children:"feat(develop): Added new feature to API\n\nBREAKING_CHANGE: This commit introduces a breaking change to the API's response format.\n"})})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},5710:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>c});var t=n(758);const i={},o=t.createContext(i);function r(e){const s=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(o.Provider,{value:s},e.children)}}}]);