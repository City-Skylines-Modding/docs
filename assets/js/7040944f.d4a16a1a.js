"use strict";(self.webpackChunkcity_skylines_wiki=self.webpackChunkcity_skylines_wiki||[]).push([[115],{7211:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var t=s(6070),a=s(5710);const r={},i="Branch Naming Standard",c={id:"standards/std-002",title:"Branch Naming Standard",description:"Types of a Branch",source:"@site/docs/standards/std-002.md",sourceDirName:"standards",slug:"/standards/std-002",permalink:"/docs/standards/std-002",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Commit Message Standards",permalink:"/docs/standards/std-001"},next:{title:"Pull Request Standards",permalink:"/docs/standards/std-003"}},o={},d=[{value:"Types of a Branch",id:"types-of-a-branch",level:2},{value:"Branch Naming Format",id:"branch-naming-format",level:2},{value:"Branch Naming Examples",id:"branch-naming-examples",level:2}];function l(n){const e={code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"branch-naming-standard",children:"Branch Naming Standard"}),"\n",(0,t.jsx)(e.h2,{id:"types-of-a-branch",children:"Types of a Branch"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"feat"}),": A new feature for the user, not a new feature for build script."]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"fix"}),": A bug fix for the user, not a fix to a build script."]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"docs"}),": Changes to the documentation only."]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"style"}),": Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)."]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"refactor"}),": A code change that neither fixes a bug nor adds a feature."]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"perf"}),": A code change that improves performance."]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"test"}),": Adding missing or correcting existing tests."]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"chore"}),": Changes to the build process or auxiliary tools and libraries such as documentation generation."]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"branch-naming-format",children:"Branch Naming Format"}),"\n",(0,t.jsx)(e.p,{children:"Each branch name consists of"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["a ",(0,t.jsx)(e.strong,{children:"type"}),","]}),"\n",(0,t.jsxs)(e.li,{children:["a ",(0,t.jsx)(e.strong,{children:"scope"}),","]}),"\n",(0,t.jsxs)(e.li,{children:["and a ",(0,t.jsx)(e.strong,{children:"subject"}),"."]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-{text}",children:"<type>/<scope>-<subject>\n"})}),"\n",(0,t.jsx)(e.p,{children:"If it is a change, it should be prefixed with the type of change it contains. If it is a feature, it should be prefixed with the type of feature it contains."}),"\n",(0,t.jsx)(e.h2,{id:"branch-naming-examples",children:"Branch Naming Examples"}),"\n",(0,t.jsx)(e.p,{children:"Here are some examples of branch names following the branch naming format:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"feat/documentation-update-fix\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"fix/automatic-bulldozer\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"chore/update-dependencies\n"})})]})}function h(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(l,{...n})}):l(n)}},5710:(n,e,s)=>{s.d(e,{R:()=>i,x:()=>c});var t=s(758);const a={},r=t.createContext(a);function i(n){const e=t.useContext(r);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:i(n.components),t.createElement(r.Provider,{value:e},n.children)}}}]);